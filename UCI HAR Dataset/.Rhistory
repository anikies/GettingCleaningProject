-5:20
(-5:20)
-(5:20)
select(cran,select(X:sieze)
select(cran,select(X:sieze))
select(cran,select(X:sieze))
select(cran,select(X:size))
select(cran,select(-(X:ip_id))
)
select(cran,select(-(X:ip_id)))
select(cran,-(X:ip_id)))
select(cran,-(X:ip_id))
select(cran,(-X:ip_id))
select(cran,(-X:-ip_id))
select(cran,-(X:ip_id))
cran
select(cran,-(X:ip_id))
select(cran,-(X:))
select(cran,-(X))
info()
select(cran,-(X:ncol(cran)))
select(cran,-(X:cran.size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.1.1", country IN "US")
filter(cran, r_version == "3.1.1", country IN "India")
filter(cran, r_version == "3.1.1", country == "India")
filter(cran, r_version <= "3.0.2", country == "India")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500,r_os equals "linux-gnu")
filter(cran, size>100500,r_os equals ="linux-gnu")
filter(cran, size>100500,r_os equals =="linux-gnu")
filter(cran, size>100500,r_os =="linux-gnu")
is.na(c(3, 5, NA, 10)).
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10)).
!is.na(c(3, 5, NA, 10))
filter(cran, is.na(r_version))
filter(cran, !is.na(r_version))
cran2<-select(x:ip_id)
cran2<-select(cran,x:ip_id)
cran2<-select(cran,X:ip_id)
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3<-select(ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10,correct_size = size-1000)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10,correct_size = size+1000)
mutate(cran3,correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- cran.group_by(package)
by_package <- group_by(package)
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
?n
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
?filter
top_counts<-filter(pack_sum,count<679)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
op_counts_sorted <-arrange(cran,desc(count))
op_counts_sorted <- arrange(top_counts,desc(count))
op_counts_sorted <- arrange(top_counts,desc(count))
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-quantile(pack_sum$uniqye, probs = 0.99)
top_unique<-filter(pack_sum,count>465)
top_unique<-filter(pack_sum$unique,count>465)
top_unique<-filter(pack_sum,count>465)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View()
View(result3)
submit()
?select
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
source('~/science-projects/githubcoursera.R', echo=TRUE)
source('~/science-projects/githubcoursera.R', echo=TRUE)
f<-read.url("http://biostat.jhsph.edu/~jleek/contact.html")
f<-con("http://biostat.jhsph.edu/~jleek/contact.html")
con<-url("http://biostat.jhsph.edu/~jleek/contact.html")
code<-readLines(con)
close(con)
code
nchar(10)
nchar(2)
nchar(code,2)
nchar(code)
code[10,]
code[10]
nchar(2)
nchar(1)
nchar(code[1])
nchar(code[10])
nchar(code[20])
nchar(code[20])
nchar(code[30])
nchar(code[100])
library(swirl)
swirl()
library(tidyr)
students
?gather
grade(students)
gather(students)
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
submit()
submit()
submit()
submit()
?gather
submit()
submit()
submit()
reset()
submit()
?spread()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
?extract
?extract_numeric
?mutate
submit()
submit()
now
students4
submit()
submit()
submit()
submit()
submit()
?unique
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed,value="passed")
mutate(passed,status="passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
??bind_rows
packageVersion('dplyr')
quit
exit
exit()
quit()
install.packages("dplyr")
library(dplyr)
library(swirl)
swirl()
?bind_rows
?bind_rows(passed,failed)
bind_rows(passed,failed)
sat
?separate
submit()
submit()
?group_by
submit()
submit()
strsplit("wdf")
?strsplit
setwd("~/science-projects")
data<-csv("getdata-data-ss06hid.csv")
data<-read.csv("getdata-data-ss06hid.csv")
str(data)
q1<-strsplit("wgtp",names(data))
q1
names(Data)
names(data)
q1<-strsplit("wgtp",names(data))
q1
q1[123]
q1<-strsplit(names(data),"wgtp")
q1[123]
data<-read.csv("getdata-data-GDP.csv")
str(data)
gsub(",", "", "1,234,567", fixed = TRUE)
laaply(data[,4],gsub(",", "", data[,4], fixed = TRUE)
)
laoply(data[,4],gsub(",", "", data[,4], fixed = TRUE) )
lapply(data[,4],gsub(",", "", data[,4], fixed = TRUE) )
gsub(",", "", data[,4], fixed = TRUE) )
gsub(",", "", data[,4], fixed = TRUE)
data[4]
dat<-gsub(",", "", data[,4], fixed = TRUE) )
dat<-gsub(",", "", data[,4], fixed = TRUE)
dat
is.digit(data)
lapply(head(data),15),as.integer(x))
lapply(head(data,15),as.integer(x))
lapply(head(data,15),as.integer(x)
)
lapply(head(data,15),as.integer()
)
lapply(head(data,15),function(x) x {as.integer(x)}
apply(head(data,15), 2, function(x) s.integer(x)))
apply(head(data,15), 2, function(x) s.integer(x))
apply(head(data,15), 2, function(x) as.integer(x))
apply(head(dat,15), 2, function(x) as.integer(x))
class(Dat)
class(dat)
apply(head(dat,15), function(x) as.integer(x))
sapply(head(dat,15), function(x) as.integer(x))
sapply(head(dat,15), function(x) mean(as.integer(x)))
d<-sapply(head(dat,15), function(x) mean(as.integer(x)))
class(d)
d[1]
head(dat,15)
as.integer(dat[1])
tapply(head(dat,15), function(x) mean(as.integer(x)))
class(head(dat,15))
head(dat,15)
tapply(head(dat,15), function(x) as.integer(x))
sapply(head(dat,15), function(x) as.integer(x))
sapply(head(dat,15), function(x) strip(x))
?strip
sapply(head(dat,15), function(x) trim(x))
?Strip
library(stringr)
str_trim(head(dat,15))
d<-str_trim(head(dat,15))
d
tapply(head(dat,15), function(x) as.integer(x))
sapply(head(dat,15), function(x) as.integer(x))
sapply(d, function(x) as.integer(x))
class(sapply(d, function(x) as.integer(x)))
a<-sapply(d, function(x) as.integer(x))
a
a[1]
a[1][1]
a[1][1][1]
a<-lapply(d, function(x) as.integer(x))
a
class(a)
apply(a,2,mean)
mean(a)
a
a[1]
sum(a)
lapply(a,mean)
lapply(a,mean)
tapply(a,mean)
sapply(a,mean)
a
summary(a)
str(a)
sum(a[,])
sum(a[,1])
sum(a[1,1])
a[1]
mean(a[1])
mean(a[[1])
mean(a[[1]])
mean(list)
mean(a)
a
a<-sapply(a,mean)
a
mean(a)
data
colname(dat)
colname(data)
colnames(data)
w<-subset(data, is.numeric(US.dollars), select = c(US.dollars)
)
w<-subset(data, is.numeric(US.dollars.), select = c(US.dollars.))
w
d<-str_trim(data$US.dollars.)
d
w<-subset(data, US.dollars.=".." | US.dollars.="", select = c(US.dollars.))
w<-subset(data, US.dollars.==".." | US.dollars.=="", select = c(US.dollars.))
w
w<-subset(data, US.dollars.!=".." | US.dollars.!="", select = c(US.dollars.))
w
w<-subset(data, US.dollars.!=".." & US.dollars.!="", select = c(US.dollars.))
w
class(w[1])
class(w[1][1])
w[1]
w[1,1]
mean(w)
a<-lapply(w, function(x) as.integer(x))
a
lapply(a,gsub(",", "", data[,4], fixed = TRUE) )
w<-subset(data, US.dollars.!=".." & US.dollars.!="", select = c(US.dollars.))
w
lapply(a,gsub(",", "", a, fixed = TRUE) )
lapply(a,gsub(",", "", x, fixed = TRUE))
a
w
gsub(",", "", "1,234,567", fixed = TRUE)
c<-lapply(x, function(x) gsub(",", "", x, fixed = TRUE)
)
c<-lapply(x, function(x) {gsub(",", "", x, fixed = TRUE)}=
)
c<-lapply(x, function(x) {gsub(",", "", x, fixed = TRUE)}
)
x
a
w
c<-lapply(w, function(x) gsub(",", "", x, fixed = TRUE)}
c<-lapply(w, function(x) gsub(",", "", x, fixed = TRUE)
)
c
c<-lapply(w, function(x) is.numeric(x))
x
c
c<-lapply(w, function(x) as.numeric(x))
c
w
c
w
c
s
a
w
d
a
d
q1
c<-lapply(w, function(x) gsub(",", "", x, fixed = TRUE)
c
c<-lapply(w, function(x) gsub(",", "", x, fixed = TRUE))
c
d<-lapply(c, function(x) is.numeric(x))
d
d<-lapply(c, function(x) as.numeric(x))
d
mean(d)
summary(d)
str(d)
mean(d)
class(d)
lapply(d,mean)
s<-sum(d)
s<-lapply(d,sum)
s
s/nrow(d)
d
nrow(d)
len(d)
length(d)
d[2]
l
d
d[1]
d[2]
data
names(data)
data$Economy
grep("^United",data$Economy)
grep("^United",data$Economy,values=TRUE)
grep("^United",data$Economy,value=TRUE)
d1<-load.csv("getdata-data-EDSTATS_Country.txt")
d1<-read.csv("getdata-data-EDSTATS_Country.txt")
d1<-read.csv("getdata-data-EDSTATS_Country.csv")
d1<-read.csv("getdata-data-GDP.csv")
d1<-read.csv("getdata-data-GDP.csv")
d2<-read.csv("getdata-data-EDSTATS_Country.csv")
dt<-merge(d1,d2,by="CountryCode")
dt
names(dt)
head(Dt)
head(dt)
dt$Latest.household.survey
dt$Special.Notes
grep("^Fiscal year end:.*June",data$Special.Notes,value=TRUE)
grep("^Fiscal year end:.June",data$Special.Notes,value=TRUE)
grep("^Fiscal year end:",data$Special.Notes,value=TRUE)
grep("Fiscal year end:",data$Special.Notes,value=TRUE)
grep("Fiscal year end:",data$Special.Notes)
grep("Fi:",data$Special.Notes)
grep("^Fiscal year end:.June",dt$Special.Notes,value=TRUE)
grep("^Fiscal year end:.June",dt$Special.Notes)
sum(grep("^Fiscal year end:.June",dt$Special.Notes))
count(grep("^Fiscal year end:.June",dt$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
library(lubridate)
install.packages("lubridate")
library(lubridate)
grep("^2012",sampleTimes)
grep("^2012-.*-",sampleTimes)
grep("^2012",sampleTimes,VALUE=TRUE)
grep("^2012",sampleTimes,VALUES=TRUE)
?grep
grep("^2012",sampleTimes,VALUE=TRUE)
grep("^2012",sampleTimes)
grep("^2012",sampleTimes,VALUES=T)
grep("^2012",sampleTimes,VALUE=T)
grep("^2012",sampleTimes,value=T)
d<-grep("^2012",sampleTimes,value=T)
d<-wday(d,label=TRUE)
d
d[Tues]
d(Tues)
d
class(d)
summary(d)
d1<-read.csv("getdata-data-GDP.csv")
d1
colnames(d1)
d1$US.dollars.
res <- with(subset(total, Income.Group="High income: OECD"),mean(total$Income.Group,na.rm=TRUE))
w<-subset(d1, US.dollars.!=".." & US.dollars.!="", select = c(US.dollars.))
w
class(d)
class(w)
as.numeric(d1$US.dollars.)
c<-sapply(w, function(x) gsub(",", "", x, fixed = TRUE))
c
class(c)
apply(c,2,as.numeric())
apply(c,2,as.numeric(c))
apply(c,2,function (x) as.numeric(x))
n<-apply(c,2,function (x) as.numeric(x))
class(n)
n<-apply(c,2,function (x) mean)
n
n<-apply(c,2,function (x) mean())
n<-apply(c,2,function (x) mean(x))
n<-apply(c,2,function (x) mean)
apply(c,2,function (x) mean)
apply(n,2,function (x) mean)
n
n
n<-apply(c,2,function (x) as.numeric(x))
n
m<-apply(c,2,function (x) mean
)
m
summary(n)
summary(i)
sum(n)
sum(n)/204
source('~/Desktop/Untitled.R', echo=TRUE)
setwd("~/science-projects/GettingCleaningProject/UCI HAR Dataset")
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/science-projects/GettingCleaningProject")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/science-projects/GettingCleaningProject/UCI HAR Dataset")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
